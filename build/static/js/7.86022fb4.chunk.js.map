{"version":3,"sources":["config/api.js","Admin/Table/DataTableConfig.js","Admin/StudentDetail.jsx","Admin/Table/ListOfStudents.jsx","Admin/useExportToExcel.js","Admin/index.jsx"],"names":["HOST_PORT","process","REACT_APP_HOST_PORT","api","axios","create","baseURL","timeout","headers","mode","getData","path","setData","setIsLoading","get","then","res","console","log","data","catch","err","notification","message","description","className","finally","onCorrect","post","Modal","success","title","content","error","JSON","parse","request","response","deleteFile","id","delete","useGetColumns","setItemData","setIsVisible","useState","sortedInfo","setSortedInfo","setFilteredInfo","setSearchInputRef","useRef","setSearchText","setSearchedColumn","handleSearch","selectedKeys","confirm","dataIndex","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","type","onClick","icon","xmlns","fill","viewBox","stroke","height","width","strokeLinecap","strokeLinejoin","strokeWidth","d","size","handleReset","closeDropdown","filterIcon","filtered","fillRule","clipRule","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","window","setTimeout","focus","columns","key","name","sorter","a","b","length","sortOrder","columnKey","order","ellipsis","firstLastName","responsive","secondLastName","ci","render","text","handleChange","_","filters","StudentDetail","studentData","isVisible","showModal","setShowModal","screen","placement","destroyOnClose","onClose","fistLastName","city","email","tellphone","cellphone","invoice","nit","payment","dateOfPay","onCancel","src","urlFile","ListOfStudents","isLoading","setStudentData","dataSource","loading","ExportJsonExcel","require","Admin","students","setStudents","exportToExcel","options","fileName","Date","toLocaleDateString","datas","sheetData","map","dt","invoiceName","invoiceNit","paymentDateOfPay","paymentUrlFile","sheetFilter","sheetHeader","saveExcel","useEffect"],"mappings":"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","file":"static/js/7.86022fb4.chunk.js","sourcesContent":["import { Modal, notification } from 'antd'\r\nimport axios from 'axios'\r\nimport './notifications.sass'\r\n\r\nconst HOST_API = process.env.REACT_APP_HOST_API\r\nconst HOST_PORT = process.env.REACT_APP_HOST_PORT\r\n\r\nconst api = axios.create({\r\n  baseURL: `http://${HOST_API}:${HOST_PORT}/api/`,\r\n  timeout: 5000,\r\n  headers: { 'Content-Type': 'application/json' },\r\n  mode: 'cors'\r\n})\r\n\r\nexport const getData = (path, setData, setIsLoading) => {\r\n  setIsLoading(true)\r\n  api\r\n    .get(`/${path}`)\r\n    .then(res => {\r\n      console.log('res.data', res.data)\r\n      setData(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      console.log('err', err)\r\n      setData(null)\r\n      notification['error']({\r\n        message: 'No se pudo obtener la lista de alumnos',\r\n        description: 'Hubo un error al obtener la lista de alumnos ' + err,\r\n        className: 'notifications'\r\n      })\r\n    })\r\n    .finally(() => setIsLoading(false))\r\n}\r\n\r\nexport const create = (path, data, setIsLoading, onCorrect) => {\r\n  setIsLoading(true)\r\n  api\r\n    .post(`/${path}`, data)\r\n    .then(() => {\r\n      Modal.success({\r\n        title: 'Registrado con exito',\r\n        content: 'Se registro su usuario satisfactoriamente'\r\n      })\r\n      // notification['success']({\r\n      //   message: 'Registrado con exito',\r\n      //   description: 'Se registro su usuario satisfactoriamente',\r\n      //   className: 'notifications'\r\n      // })\r\n      if (onCorrect) onCorrect()\r\n    })\r\n    .catch(err => {\r\n      Modal.error({\r\n        title: 'Error al registrar',\r\n        content: 'No se pudo registrar: ' + JSON.parse(err.request.response).message\r\n      })\r\n      // notification['error']({\r\n      //   message: 'No se pudo registrar',\r\n      //   description: 'Hubo un error al registrar ' + err,\r\n      // })\r\n    })\r\n    .finally(() => setIsLoading(false))\r\n}\r\n\r\nexport const deleteFile = id => {\r\n  api\r\n    .delete(`/upload/${id}`)\r\n    .then(res => {\r\n      console.log('res.data', res.data)\r\n    })\r\n    .catch(err => console.log('err', err))\r\n}\r\n","import { Button, Input, Space } from 'antd'\r\nimport { useRef, useState } from 'react'\r\n\r\nexport const useGetColumns = (setItemData, setIsVisible) => {\r\n  const [sortedInfo, setSortedInfo] = useState({})\r\n  const [filteredInfo, setFilteredInfo] = useState({})\r\n  const setSearchInputRef = useRef(null)\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchedColumn] = useState('')\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm()\r\n    setSearchText(selectedKeys[0])\r\n    setSearchedColumn(dataIndex)\r\n  }\r\n\r\n  const handleReset = clearFilters => {\r\n    clearFilters()\r\n    setSearchText('')\r\n  }\r\n\r\n  const getColumnSearchProps = dataIndex => ({\r\n    // eslint-disable-next-line\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={setSearchInputRef}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                height={12}\r\n                width={12}\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                />\r\n              </svg>\r\n            }\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Buscar\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Limpiar\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false })\r\n              setSearchText(selectedKeys[0])\r\n              setSearchedColumn(dataIndex)\r\n            }}\r\n          >\r\n            Filtrar\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    // eslint-disable-next-line\r\n    filterIcon: filtered => (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-5 w-5\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill={filtered ? '#1890ff' : '#c0c0c0'}\r\n        height={18}\r\n        width={18}\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible && setSearchInputRef) {\r\n        window.setTimeout(() => setSearchInputRef.focus, 100)\r\n      }\r\n    }\r\n    //   this.state.searchedColumn === dataIndex ? (\r\n    //     // <Highlighter\r\n    //     //   highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n    //     //   searchWords={[this.state.searchText]}\r\n    //     //   autoEscape\r\n    //     //   textToHighlight={text ? text.toString() : ''}\r\n    //     // />\r\n    //   ) : (\r\n    //     text\r\n    //   ),\r\n  })\r\n\r\n  const handleChange = (_, filters, sorter) => {\r\n    setFilteredInfo(filters)\r\n    setSortedInfo(sorter)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      onFilter: (value, record) => record.name.includes(value),\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n      ellipsis: true,\r\n      ...getColumnSearchProps('name')\r\n    },\r\n    {\r\n      title: 'Primer apellido',\r\n      dataIndex: 'firstLastName',\r\n      key: 'firstLastName',\r\n      onFilter: (value, record) => record.firstLastName.includes(value),\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      sortOrder: sortedInfo.columnKey === 'firstLastName' && sortedInfo.order,\r\n      responsive: ['md'],\r\n      ...getColumnSearchProps('firstLastName')\r\n    },\r\n    {\r\n      title: 'Segundo apellido',\r\n      dataIndex: 'secondLastName',\r\n      key: 'secondLastName',\r\n      onFilter: (value, record) => record.secondLastName.includes(value),\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      sortOrder: sortedInfo.columnKey === 'secondLastName' && sortedInfo.order,\r\n      responsive: ['md'],\r\n      ...getColumnSearchProps('secondLastName')\r\n    },\r\n    {\r\n      title: 'C.I.',\r\n      dataIndex: 'ci',\r\n      key: 'ci',\r\n      onFilter: (value, record) => record.ci.includes(value),\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      responsive: ['md'],\r\n      ...getColumnSearchProps('ci')\r\n    },\r\n    {\r\n      title: 'Opciones',\r\n      dataIndex: 'options',\r\n      key: 'options',\r\n      // eslint-disable-next-line\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setIsVisible(true)\r\n              setItemData(record)\r\n            }}\r\n          >\r\n            Ver Detalles\r\n          </Button>\r\n        </Space>\r\n      )\r\n    }\r\n  ]\r\n  return { columns, handleChange }\r\n}\r\n","import { Button, Divider, Drawer, Modal } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\n\r\nexport default function StudentDetail({ studentData, isVisible, setIsVisible }) {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const width = window.window.screen.width\r\n  return (\r\n    <Drawer\r\n      title=\"Datos del formulario de registro del estudiante\"\r\n      placement=\"right\"\r\n      width={width >= 640 ? '30%' : '70%'}\r\n      destroyOnClose\r\n      onClose={() => setIsVisible(false)}\r\n      visible={isVisible}\r\n    >\r\n      <h2>Datos personales</h2>\r\n      <h3>Nombre: </h3>\r\n      <p>{studentData.name}</p>\r\n      <h3>Primer apellido: </h3>\r\n      <p>{studentData.fistLastName}</p>\r\n      <h3>Segundo apellido: </h3>\r\n      <p>{studentData.secondLastName}</p>\r\n      <h3>Ciudad: </h3>\r\n      <p>{studentData.city}</p>\r\n      <h3>Carnet de identidad: </h3>\r\n      <p>{studentData.ci}</p>\r\n      <h3>Email: </h3>\r\n      <p>{studentData.email}</p>\r\n      <h3>Telefono: </h3>\r\n      <p>{studentData.tellphone}</p>\r\n      <h3>Celular: </h3>\r\n      <p>{studentData.cellphone}</p>\r\n      <Divider />\r\n      <h2>Datos para la factura</h2>\r\n      <h3>Nombre de la factura: </h3>\r\n      <p>{studentData.invoice && studentData.invoice.name}</p>\r\n      <h3>NIT: </h3>\r\n      <p>{studentData.invoice && studentData.invoice.nit}</p>\r\n      <Divider />\r\n      <h2>Datos para la factura</h2>\r\n      <h3>Fecha de pago: </h3>\r\n      <p>{studentData.payment && studentData.payment.dateOfPay}</p>\r\n      <h3>Boleta de pago: </h3>\r\n      <Button type=\"primary\" onClick={() => setShowModal(true)}>\r\n        Ver boleta de pago\r\n      </Button>\r\n      <Modal\r\n        width={750}\r\n        title=\"Boleta de pago\"\r\n        visible={showModal}\r\n        destroyOnClose\r\n        onCancel={() => setShowModal(false)}\r\n      >\r\n        <embed\r\n          src={\r\n            studentData.payment &&\r\n            'http://' +\r\n              process.env.REACT_APP_HOST_API +\r\n              ':' +\r\n              process.env.REACT_APP_HOST_PORT +\r\n              studentData.payment.urlFile\r\n          }\r\n          width=\"100%\"\r\n          height=\"400px\"\r\n        />\r\n      </Modal>\r\n      <Divider />\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nStudentDetail.propTypes = {\r\n  studentData: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    fistLastName: PropTypes.string,\r\n    secondLastName: PropTypes.string,\r\n    ci: PropTypes.number,\r\n    city: PropTypes.string,\r\n    email: PropTypes.string,\r\n    tellphone: PropTypes.number,\r\n    cellphone: PropTypes.number,\r\n    invoice: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      nit: PropTypes.string\r\n    }),\r\n    payment: PropTypes.shape({\r\n      dateOfPay: PropTypes.object,\r\n      urlFile: PropTypes.string\r\n    })\r\n  }),\r\n  isVisible: PropTypes.bool,\r\n  setIsVisible: PropTypes.func\r\n}\r\n","import { useState } from 'react'\r\nimport { Table } from 'antd'\r\nimport { useGetColumns } from './DataTableConfig'\r\nimport PropTypes from 'prop-types'\r\nimport StudentDetail from '../StudentDetail'\r\n\r\nexport default function ListOfStudents({ data, isLoading }) {\r\n  const [studentData, setStudentData] = useState({})\r\n  const [isVisible, setIsVisible] = useState(false)\r\n  const { columns, handleChange } = useGetColumns(setStudentData, setIsVisible)\r\n  return (\r\n    <div className=\"table\">\r\n      <Table dataSource={data} columns={columns} loading={isLoading} onChange={handleChange} />\r\n      <StudentDetail studentData={studentData} isVisible={isVisible} setIsVisible={setIsVisible} />\r\n    </div>\r\n  )\r\n}\r\n\r\nListOfStudents.propTypes = {\r\n  data: PropTypes.array,\r\n  isLoading: PropTypes.bool\r\n}\r\n","const ExportJsonExcel = require('js-export-excel')\r\n\r\nexport default function useExportToExcel() {\r\n  const exportToExcel = data => {\r\n    const options = {}\r\n    options.fileName = 'Lista De Alumno ' + new Date().toLocaleDateString('es-ES')\r\n\r\n    options.datas = [\r\n      {\r\n        sheetData: data.map(dt => ({\r\n          ...dt,\r\n          invoiceName: dt.invoice.name,\r\n          invoiceNit: dt.invoice.nit,\r\n          paymentDateOfPay: dt.payment.dateOfPay,\r\n          paymentUrlFile:\r\n            'http://' +\r\n            process.env.REACT_APP_HOST_API +\r\n            ':' +\r\n            process.env.REACT_APP_HOST_PORT +\r\n            dt.payment.urlFile\r\n        })),\r\n        sheetFilter: [\r\n          'name',\r\n          'firstLastName',\r\n          'secondLastNameLastName',\r\n          'ci',\r\n          'tellphone',\r\n          'cellphone',\r\n          'email',\r\n          'city',\r\n          'invoiceName',\r\n          'invoiceNit',\r\n          'paymentDateOfPay',\r\n          'paymentUrlFile'\r\n        ],\r\n        sheetHeader: [\r\n          'Nombres',\r\n          'Primer apellido',\r\n          'Segundo apellido',\r\n          'C.I.',\r\n          'Telefono',\r\n          'Celular',\r\n          'Email',\r\n          'Ciudad',\r\n          'Nombre de la factura',\r\n          'Nit de la factura',\r\n          'Fecha de pago',\r\n          'Url de la boleta de pago'\r\n        ]\r\n      }\r\n    ]\r\n\r\n    const toExcel = new ExportJsonExcel(options)\r\n    toExcel.saveExcel()\r\n  }\r\n\r\n  return exportToExcel\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react/cjs/react.development'\r\nimport { Button } from 'antd'\r\nimport { getData } from '../config/api'\r\nimport ListOfStudents from './Table/ListOfStudents'\r\nimport useExportToExcel from './useExportToExcel'\r\nimport './admin.sass'\r\n\r\nexport default function Admin() {\r\n  const [students, setStudents] = useState()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const exportToExcel = useExportToExcel()\r\n\r\n  useEffect(() => {\r\n    getData('students', setStudents, setIsLoading)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>Lista de insctitos</h1>\r\n      </div>\r\n      <div className=\"action__buttons\">\r\n        <Button type=\"primary\" className=\"button__excel\" onClick={() => exportToExcel(students)}>\r\n          Exportar excel\r\n        </Button>\r\n      </div>\r\n      <ListOfStudents data={students} isLoading={isLoading} />\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}